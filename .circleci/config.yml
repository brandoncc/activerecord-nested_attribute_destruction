version: 2.1
jobs:
  build:
    docker:
      - image: circleci/ruby:<< parameters.ruby-version >>
    parameters:
      ruby-version:
        type: string
      active-record-version:
        type: string
    steps:
      - checkout

      - run:
          name: Installing the correct version of the bundler gem
          command: |
            # install the bundler version that was used to build the lock file
            gem install bundler -v $(tail -1 Gemfile.lock | ruby -e "puts STDIN.read.strip")
            bundle config set --local path 'vendor/bundle'

      - run:
          name: Installing rails << parameters.active-record-version >>
          command: |
            echo "---> Updating rails version in bundle"
            sed -i 's/^.*gem "rails.*$/gem "rails", "<< parameters.active-record-version >>"/' Gemfile

            bundle update

      - run:
          name: |
            Exit early if ruby and activerecord versions are not
            compatible
          command: |
            activerecord_version=$(bundle info activerecord | grep '* activerecord' | ruby -e 'puts STDIN.read.gsub(/.*\(|\).*/, "")')
            compatible=$(ruby .circleci/configuration_validity_check.rb "<< parameters.ruby-version >>" "$activerecord_version")

            if [ "$compatible" != "yes" ]; then
              circleci-agent step halt
            fi

      - run:
          name: Running build
          command: |
            bundle exec rake

workflows:
  all-tests:
    jobs:
      - build:
          matrix:
            parameters:
              ruby-version: ["2.5", "2.6", "2.7", "3.0"]
              active-record-version: ["~> 5.2.0", "~> 6.0.0", "~> 6.1.0", "~> 7.0.0"]
